pid_t getpgrp(); //用来取得目前进程所属的组id。
pid_t getpgid(pid_t pid);//用来取得参数pid指定进程所属的组id
int setpgid(pid_t pid, pid_t pgid);//设置组id
pid_t setsid();//设置一个新的会话
pid_t getsid(pid_t pid);//获取会话id

ps aux | grep int
cat > test.txt
grep fd < test.txt
ps aux | grep int > test.txt
管道是两个进程间用的
输入输出重定向是进程和文件间用的

cat > test.txt & 后台执行
ctrl + z
jobs
fg $1
bg $1



假设你发现前台运行的一个程序需要很长的时间,但是需要干其他的事情,你就可以用 Ctrl-Z ,终止这个程序,然后可以看到系统提示:
[1]+ Stopped /root/bin/rsync.sh
然后我们可以把程序调度到后台执行:(bg 后面的数字为作业号)
#bg 1
[1]+ /root/bin/rsync.sh &
用 jobs 命令查看正在运行的任务:
#jobs
[1]+ Running /root/bin/rsync.sh &
如果想把它调回到前台运行,可以用
#fg 1
/root/bin/rsync.sh
这样,你在控制台上就只能等待这个任务完成了.

& 将指令丢到后台中去执行
[ctrl]+z 将前台任务丢到后台中暂停
jobs 查看后台的工作状态
fg %jobnumber 将后台的任务拿到前台来处理
bg %jobnumber 将任务放到后台中去处理
kill 管理后台的任务
命令运行时使用CTRL+Z，强制当前进程转为后台，并使之停止。






