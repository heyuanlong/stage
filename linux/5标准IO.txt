setbuf()
setvbuf()
fflush
fopen()
fclose()
int getc(FILE* fp)(可宏实现)
int fgetc(FILE* fp)(必须函数实现)
int getchar(void)
ferror(判断是出错还是文件末尾)
feof(判断是出错还是文件末尾)
clearerr(清除以上两种标志)
ungetc(将字符再压送回流中)
int putc(int c,FILE* fp)
int fputc(int c,FILE* fp)
int putchar(int c)

char* fgets(char *buf,int n,FILE *fp) //整行
char* gets(char *buf)
int fputs(const char *str,FILE* fp)
int puts(const char *str)

二进制IO
size_t fread(void *ptr,size_t size,size_t nums,FILE *fp)
size_t fwrite(void *ptr,size_t size,size_t nums,FILE *fp)

ftell
fseek
rewind

格式化IO
printf
int fprintf(FILE *fp,const char* format,...)
int dprintf(int fd,const char* format,...)
int sprintf(char* buf,const char* format,...)
int snprintf(char* buf,size_t n,const char* format,...)
vprintf(const char format,va_list arg)

int scanf(const char *format,..)
int fscanf(FILE *fp,const char *format,..)
int sscanf(const char *buf,const char *format,..)
vscanf(const char format,va_list arg)

int fileno(FILE *fp)//流转为文件描述符
FILE* fdopen(int fd,const char *type)//文件描述符转为流

FILE* tmpfile(void)

内存流
FILE* fmemopen(void *buf,size_t size,const char *type)
FIEL* open_memstream(char **bufp,size_t *sizep)
FIEL* open_wmemstream(wchar_t **bufp,size_t *sizep)

