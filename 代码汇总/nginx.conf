example(把supercms.matchvs.com导向到127.0.0.1:8080/superadmin/):
[
	upstream  supercms.matchvs.com  {
	    server    127.0.0.1:8080;
	}

	server {
	    listen   80;
	    server_name  supercms.matchvs.com;
	    access_log  /var/log/nginx/supercms.matchvs.com.access.log;
	    error_log  /var/log/nginx/supercms.matchvs.com.error.log;

	    root /data/matchvs.com/cms/htdocs/;
	    index index.html index.htm;

	    location / {
	        expires            off;
	        proxy_pass         http://supercms.matchvs.com/superadmin/;
	        proxy_set_header   Host             $host;
	        proxy_set_header   X-Real-IP        $remote_addr;
	        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	        add_header From    supercms.matchvs.com;
	        proxy_cookie_path  /superadmin/ /;
	        proxy_set_header   Cookie $http_cookie;
	    }

	   location ^~ /superadmin/ {
	        expires            off;
	        proxy_pass         http://supercms.matchvs.com/superadmin/;
	        proxy_set_header   Host             $host;
	        proxy_set_header   X-Real-IP        $remote_addr;
	        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	        add_header From    supercms.matchvs.com;
	        proxy_cookie_path  /superadmin/ /;
	        proxy_set_header   Cookie $http_cookie;
	   }

	}

]



example(lua基本配置)
[
	server {
		listen   80;
		server_name  open.matchvs.com;
		access_log  /var/log/nginx/open.matchvs.com.access.log;
		error_log  /var/log/nginx/open.matchvs.com.error.log;

		root /data/matchvs.com/open/htdocs/open;
	    	index index.html index.htm;

	    location = / {
	        deny all;
	    }
	    
		location = /wc3/weixin/weixin_host/weixin_web_login.do {
	        default_type 'text/plain';
	        charset UTF-8;
	        content_by_lua_file /home/xiaofei/lua/weixin_web_login.lua;
	    }
	}

]



example(nginx.conf)
[

	user  www www;
	worker_processes 8;
	worker_rlimit_nofile 102400;
	error_log  /var/log/nginx/error.log error;
	pid        logs/nginx.pid;

	events {
	    worker_connections  102400;
	    use epoll;
	}

	http {
	    include       mime.types;
	    default_type  application/octet-stream;
	    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	                      '$status $body_bytes_sent "$http_referer" '
	                      '"$http_user_agent" "$http_x_forwarded_for"';
	    access_log  logs/access.log  main;
	    sendfile        on;
	    tcp_nopush      on;
	    keepalive_timeout  5;
	    tcp_nodelay on;
	    client_header_buffer_size 4k;
	    client_max_body_size 100m;

	    fastcgi_connect_timeout 300;
	    fastcgi_send_timeout 300;
	    fastcgi_read_timeout 300;
	    fastcgi_buffer_size 4k;
	    fastcgi_buffers 8 4k;
	    fastcgi_busy_buffers_size 8k;
	    fastcgi_temp_file_write_size 8k;

	    gzip  on;
	    gzip_min_length 0;
	    gzip_buffers 4 16k;
	    gzip_http_version 1.0;
	    gzip_comp_level 7;
	    gzip_proxied any;
	    gzip_types text/plain application/x-javascript text/css application/xml text/xml;
	    gzip_vary on;

	    open_log_file_cache max=1000 inactive=60s min_uses=2 valid=1m;
	    open_file_cache max=102400 inactive=20s;
	    open_file_cache_min_uses 1;

	    lua_package_path "/data/sns.kobox.tv/lib/sns_common/?.lua;/data/sns.kobox.tv/lib/biz/?.lua;/data/sns.kobox.tv/lib/?.lua;/data/matchvs.com/lib/third_party_pay/connections/?.lua;/data/matchvs.com/lib/common/?/init.lua;/data/matchvs.com/lib/third_party_pay/?.lua;/data/matchvs.com/lib/pay/?.lua;/data/matchvs.com/lib/?.lua;/data/matchvs.com/lib/common/?.lua;/data/matchvs.com/lib/user/?.lua;/data/matchvs.com/lib/open/?.lua;/data/matchvs.com/lib/arbitration/?.lua;/data/matchvs.com/portal/libs/?.lua;/usr/local/lib/lua/5.1/?.lua;/usr/local/share/lua/5.1/?.lua;";
	    lua_package_cpath "/data/matchvs.com/lib/third_party_pay/?.so;/data/matchvs.com/lib/common/?.so;/data/matchvs.com/lib/?.so;/usr/local/lib/lua/5.1/?.so;";

	    expires 3h;

	    include /usr/local/nginx/conf/conf.d/*.conf;
	    include /usr/local/nginx/conf/sites-enabled/*;
	} 
]










nginx的lua配置
[
    lua_package_path ......
    lua_package_cpath ......

    include /usr/local/nginx/conf/conf.d/*.conf;
    include /usr/local/nginx/conf/sites-enabled/*;
]



nginx.conf 可以设置{
	worker_processes
	events {
	    worker_connections  102400;
	    use epoll;
	}

所有设置： http://nginx.org/en/docs/ngx_core_module.html
}



----------Beginner’s Guide

nginx -s stop — fast shutdown
nginx -s quit — graceful shutdown
nginx -s reload — reloading the configuration file（会先检测配置文件的语法，语法错误则不重启）
nginx -s reopen — reopening the log files



nginx代理模块文档：
http://nginx.org/en/docs/http/ngx_http_proxy_module.html

Setting Up a Simple Proxy Server[
	server {
	    location / {
	        proxy_pass http://localhost:8080/;
	    }

	    location ~ \.(gif|jpg|png)$ {
	        root /data/images;
	        index index.jpg
	    }
	}
]


Setting Up FastCGI Proxying[
	server {
	    location / {
	        fastcgi_pass  localhost:9000;
	        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	        fastcgi_param QUERY_STRING    $query_string;
	    }

	    location ~ \.(gif|jpg|png)$ {
	        root /data/images;
	    }
	}
]



----------Admin’s Guide
Web server
(https://www.nginx.com/resources/admin-guide/nginx-web-server/)
[
	Setting Up Virtual Servers			设置虚拟主机
	Configuring Locations				配置location
	Using Variables						使用变量
	Returning Specific Status Codes		返回指定的状态码
	Rewriting URIs in Requests			rewritingURL请求
	Rewriting HTTP Responses			rewriting返回数据
	Handling Errors						控制错误
]

Serving static content 
(https://www.nginx.com/resources/admin-guide/serving-static-content/)
[
	Root Directory and Index   			设置根目录和默认文件
	Trying Several Options 				设置可代替文件
	Optimizing NGINX Speed for Serving content  	设置一些服务属性{
		Enabling sendfile
		Enabling tcp_nopush
		Enabling tcp_nodelay
	}

	server {
	    root /www/data;

	    location / {
	    root /data;
	    index index.$geo.html index.htm index.html;
	    }

	    location /images/ {
	    }

	    location ~ \.(mp3|mp4) {
	        root /www/media;
	    }
	    location ~ \.php {
	    fastcgi_pass localhost:8000;
	    ...
		}
	}


	server {
    root /www/data;
	    location /images/ {
	        try_files $uri /images/default.gif;  如果没有指定的文件则使用这个default.gif
	    }
	}
]


Reverse proxy
(https://www.nginx.com/resources/admin-guide/reverse-proxy/)
[
	Introduction
	Passing a Request to a Proxied Server
	Passing Request Headers
	Configuring Buffers
	Choosing an Outgoing IP Address


location /some/path/ {
    proxy_pass http://www.example.com/link/;
}
location ~ \.php {
    proxy_pass http://127.0.0.1:8000;
}
location /some/path/ {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass http://localhost:8000;
}
location /some/path/ {
    proxy_set_header Accept-Encoding "";
    proxy_pass http://localhost:8000;
}


Configuring Buffers:
location /some/path/ {
    proxy_buffers 16 4k;
    proxy_buffer_size 2k;
    proxy_pass http://localhost:8000;
}
location /some/path/ {
    proxy_buffering off;
    proxy_pass http://localhost:8000;
}


Choosing an Outgoing IP Address:
location /app1/ {
    proxy_bind 127.0.0.1;
    proxy_pass http://example.com/app1/;
}

location /app2/ {
    proxy_bind 127.0.0.2;
    proxy_pass http://example.com/app2/;
}

]


Compression and decompression
(https://www.nginx.com/resources/admin-guide/compression-and-decompression/) 
[
	压缩和解压缩
]

Web content cache
(https://www.nginx.com/resources/admin-guide/content-caching/)
[
	缓存
]





--------------test find

[
	location = / {
		default_type 'text/plain';
	    charset UTF-8;
	    content_by_lua '
	    	ngx.say("=/")
	    ';
	}
	location  / {
		default_type 'text/plain';
	    charset UTF-8;
	    content_by_lua '
	    	ngx.say("/")
	    ';
	}
test.hyltest.com/					匹配"=/"
test.hyltest.com/ssss				当没有匹配到ssss时就会匹配"/"


	location /wc{
		default_type 'text/plain';
	    charset UTF-8;
	    content_by_lua '
	    	ngx.say("/wc")
	    ';
	}
	location = /wc{
		default_type 'text/plain';
	    charset UTF-8;
	    content_by_lua '
	    	ngx.say("=/wc")
	    ';
	}

test.hyltest.com/wc						匹配"=/wc"
test.hyltest.com/wc/ssss				匹配"/wc"


结论：=表示精确匹配， 精确匹配 > 贪婪匹配 > 全局匹配


	location ~ .(png|gif)$ {
		echo "png|gif";
	}
	location ~* .(png|gif)$ {
		echo "pnG|gIf";
	}

	location ^~ /image/ {
		echo "/image/";
		 # 匹配任何已 /images/ 开头的任何查询并且停止搜索。任何正则表达式将不会被测试。
	}
	location ^~ /image {
		echo "/image";
	}
	
~  为区分大小写匹配(可用正则表达式)	
~* 为不区分大小写匹配(可用正则表达式)
^~ 如果把这个前缀用于一个常规字符串,那么告诉nginx 如果路径匹配那么不测试正则表达式。
]







------------Load Balancing














