Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。


redis需要主动  save一下 或者配置好
Redis配置文件详解    http://blog.csdn.net/h1023417614/article/details/54407465

在远程服务上执行命令
$ redis-cli -h host -p port -a password

获取配置信息
config get requirepass
config get bind

keys test**k  模糊查询键



string{
	SET key value 
	GET key 
	INCR key 将 key 中储存的数字值增一。
	DECR key 将 key 中储存的数字值减一。
	APPEND key value
	DEL key

	MGET key [key …]
	MSET key value [key value …]
}

hash{
	HSET key field value
	HGET key field 
	HMSET key field1 value1 [field2 value2 ]
	HMGET key field1 [field2]
	HGETALL key 

	HDEL key field2 [field2] 删除一个或多个哈希表字段
	DEL key
}

list{
	LPUSH key value1 [value2] 将一个或多个值插入到列表头部
	LPOP key 移出并获取列表的第一个元素

	RPUSH key value1 [value2] 在列表中添加一个或多个值
	RPOP key 移除并获取列表最后一个元素

	LINDEX key index 通过索引获取列表中的元素
	LREM key count value 移除列表元素
	LTRIM key start stop 对一个列表进行修剪(trim)
}

set{
	SADD key member1 [member2] 向集合添加一个或多个成员
	SCARD key 获取集合的成员数
	SISMEMBER key member 判断 member 元素是否是集合 key 的成员
	SMEMBERS key 返回集合中的所有成员

	SREM key member1 [member2] 移除集合中一个或多个成员
}

sorted set{
	ZADD key score1 member1 [score2 member2] 
	ZCARD key 获取有序集合的成员数

	ZRANGE key start stop [WITHSCORES] 通过索引区间返回有序集合成指定区间内的成员
	ZRANK key member 返回有序集合中指定成员的索引

	ZREM key member [member ...] 移除有序集合中的一个或多个成员
	ZREMRANGEBYRANK key start stop 移除有序集合中给定的排名区间的所有成员
	ZREMRANGEBYSCORE key min max 移除有序集合中给定的分数区间的所有成员
}


Redis 发布订阅{
	SUBSCRIBE channel [channel ...] 订阅给定的一个或多个频道的信息。
	PUBLISH channel message 将信息发送到指定的频道。
}

事务命令{
	事务是一个原子操作：事务中的命令要么全部被执行，要么全部都不执行。
	一个事务从开始到执行会经历以下三个阶段：

	开始事务。
	命令入队。
	执行事务。

	MULTI 标记一个事务块的开始。
	DISCARD 取消事务，放弃执行事务块内的所有命令。
	EXEC 执行所有事务块内的命令。

	WATCH key [key ...] 监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断。
	UNWATCH 取消 WATCH 命令对所有 key 的监视。	
}



删{
	DEL key [key …]
}

other
{
	递增数字:	INCR key
	增加指定的整数:	INCRBY key increment
	减少:	DECR key
			DECRBY key decrement
	PING 查看服务是否运行
	SLOWLOG subcommand [argument] 管理 redis 的慢日志
}



//--批量执行redis命令--------------
1.创建命令文件redis.txt，存储命令，每条命令要换行，中间有空行的意思
2.cat redis.txt | ./redis-cli -h $host -p $port -a $password --pipe
//---------------------------------


备份{
	在客户端执行save命令即会生成dump.rdb备份文件，该文件存储的路径可以通过命令CONFIG GET dir查看
}

